{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\FALL-2023\\\\PSD\\\\Psd_Application\\\\Atom\\\\FRONT-END\\\\src\\\\components\\\\DoctorLogin.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"./css/DoctorLogin.css\";\n// Import your CSS file for styling\n\nimport { Link } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DoctorLogin = () => {\n  _s();\n  // const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  // const [emailError, setEmailError] = useState(\"\");\n  const [userError, setUserError] = useState(\"\");\n\n  // const validateEmail = (email) => {\n  //   console.log(\"in this validate email function\");\n  //   const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  //   return regex.test(email);\n  // };\n  const validateUsername = username => {\n    console.log(\"in the validation methjod of User name\");\n    // const user=username;\n    return username;\n  };\n  const navigate = useNavigate();\n  const handleLogin = () => {\n    // setEmailError(\"\");\n\n    // // if (!validateEmail(email)) {\n    //   setEmailError(\"Please enter a valid email address.\");\n\n    //   return;\n    // }\n    if (!validateUsername(username)) {\n      setUserError(\"\");\n      setUserError(\"Pleas eprovide the correct user name\");\n      return;\n    }\n\n    // Create an object with the user's credentials\n    const userCredentials = {\n      // email,\n      username,\n      password\n    };\n\n    // Send a POST request to the Java backend using fetch\n    fetch(\"http://localhost:8080/Services/Health/AuthenticateUser\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(userCredentials)\n    }).then(response => {\n      if (response.ok) {\n        return response.json(); // Parse the response as JSON\n      } else {\n        throw new Error(\"Login failed\");\n      }\n    }).then(data => {\n      // Handle the successful response, e.g., store user data or token\n      console.log(\"Login was successful\", data);\n      navigate(\"/UserDashboard\");\n\n      // You can redirect to another component after successful login if needed.\n      // For example, using React Router:\n      // history.push(\"/dashboard\"); // Make sure to import useHistory from 'react-router-dom' and configure your routes\n    }).catch(error => {\n      // Handle errors, e.g., show an error message\n      console.error(\"Login failed:\", error);\n    });\n\n    // setEmail(\"\");\n    setUsername(\"\");\n    setPassword(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            // type=\"email\"\n            type: \"text\",\n            id: \"form3Example3\",\n            className: `form-control form-control-lg ${\n            // emailError ? \"is-invalid\" : \"\"\n            userError ? \"is-invalid\" : \"\"}`,\n            placeholder: \"Enter a valid user name\"\n            // value={email}\n            ,\n            value: username\n            // onChange={(e) => setEmail(e.target.value)}\n            ,\n            onChange: e => setUsername(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), setUserError && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"invalid-feedback\",\n            children: userError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"form3Example4\",\n            className: \"form-control form-control-lg\",\n            placeholder: \"Enter password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            name: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-image\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://as1.ftcdn.net/v2/jpg/02/58/30/24/1000_F_258302473_TN25oZ5Dt9MYHPEr5vAD62cUgRBSwNAG.jpg\" // Replace with your image URL\n        ,\n        alt: \"Login Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(DoctorLogin, \"w99VjE1oOaxP7SUBmNnDGvx9UUw=\", false, function () {\n  return [useNavigate];\n});\n_c = DoctorLogin;\nexport default DoctorLogin;\nvar _c;\n$RefreshReg$(_c, \"DoctorLogin\");","map":{"version":3,"names":["React","Link","useHistory","useNavigate","jsxDEV","_jsxDEV","DoctorLogin","_s","username","setUsername","useState","password","setPassword","userError","setUserError","validateUsername","console","log","navigate","handleLogin","userCredentials","fetch","method","headers","body","JSON","stringify","then","response","ok","json","Error","data","catch","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","id","placeholder","value","onChange","e","target","required","htmlFor","name","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/FALL-2023/PSD/Psd_Application/Atom/FRONT-END/src/components/DoctorLogin.js"],"sourcesContent":["import React from \"react\";\r\nimport \"./css/DoctorLogin.css\";\r\n // Import your CSS file for styling\r\n\r\n import { Link } from \"react-router-dom\";\r\n import { useHistory } from \"react-router-dom\";\r\n import { useNavigate } from \"react-router-dom\";\r\n\r\nconst DoctorLogin = () => {\r\n  // const [email, setEmail] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  // const [emailError, setEmailError] = useState(\"\");\r\n  const [userError, setUserError] = useState(\"\");\r\n\r\n  // const validateEmail = (email) => {\r\n  //   console.log(\"in this validate email function\");\r\n  //   const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n  //   return regex.test(email);\r\n  // };\r\n  const validateUsername = (username) => {\r\n    console.log(\"in the validation methjod of User name\");\r\n    // const user=username;\r\n    return username;\r\n  };\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = () => {\r\n    // setEmailError(\"\");\r\n\r\n    // // if (!validateEmail(email)) {\r\n    //   setEmailError(\"Please enter a valid email address.\");\r\n\r\n    //   return;\r\n    // }\r\n    if (!validateUsername(username)) {\r\n      setUserError(\"\");\r\n      setUserError(\"Pleas eprovide the correct user name\");\r\n      return;\r\n    }\r\n\r\n    // Create an object with the user's credentials\r\n    const userCredentials = {\r\n      // email,\r\n      username,\r\n      password,\r\n    };\r\n\r\n    // Send a POST request to the Java backend using fetch\r\n    fetch(\"http://localhost:8080/Services/Health/AuthenticateUser\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(userCredentials),\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json(); // Parse the response as JSON\r\n        } else {\r\n          throw new Error(\"Login failed\");\r\n        }\r\n      })\r\n      .then((data) => {\r\n        // Handle the successful response, e.g., store user data or token\r\n        console.log(\"Login was successful\", data);\r\n        navigate(\"/UserDashboard\");\r\n\r\n        // You can redirect to another component after successful login if needed.\r\n        // For example, using React Router:\r\n        // history.push(\"/dashboard\"); // Make sure to import useHistory from 'react-router-dom' and configure your routes\r\n      })\r\n      .catch((error) => {\r\n        // Handle errors, e.g., show an error message\r\n        console.error(\"Login failed:\", error);\r\n      });\r\n\r\n    // setEmail(\"\");\r\n    setUsername(\"\");\r\n    setPassword(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"login-form\">\r\n        <h2>Login</h2>\r\n        <form>\r\n          <div className=\"form-group\">\r\n            <input\r\n              // type=\"email\"\r\n              type=\"text\"\r\n              id=\"form3Example3\"\r\n              className={`form-control form-control-lg ${\r\n                // emailError ? \"is-invalid\" : \"\"\r\n                userError ? \"is-invalid\" : \"\"\r\n              }`}\r\n              placeholder=\"Enter a valid user name\"\r\n              // value={email}\r\n              value={username}\r\n              // onChange={(e) => setEmail(e.target.value)}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n              required\r\n            />\r\n            <label htmlFor=\"username\">Username</label>\r\n            {setUserError && (\r\n              <div className=\"invalid-feedback\">{userError}</div>\r\n            )}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"password\"\r\n              id=\"form3Example4\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n            />\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" name=\"password\" />\r\n          </div>\r\n          <button type=\"submit\">Login</button>\r\n        </form>\r\n      </div>\r\n      <div className=\"login-image\">\r\n        <img\r\n          src=\"https://as1.ftcdn.net/v2/jpg/02/58/30/24/1000_F_258302473_TN25oZ5Dt9MYHPEr5vAD62cUgRBSwNAG.jpg\" // Replace with your image URL\r\n          alt=\"Login Image\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoctorLogin;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}